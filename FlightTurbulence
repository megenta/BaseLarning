import java.util.Arrays;
import java.util.List;

public class FlightTurbulence {
	
	private static int[] diffArray;
	private static int lastAltitude= 0;

	private static int maxTurbilence(int[] flightData) {
		int length = flightData.length;
		//boundry conditions
		if(length == 0) {
			return 0;
		}else if(length == 1) {
			return 1;
		}
		
		diffArray = new int[length];
		
		for(int i = 0; i <flightData.length; i++){
			calcDiff(i, flightData[i]);
		}
		sumDiff();
		return -1;
	}
	
	private static void calcDiff(int index, int altitude) {

		if(index == 0) {
			diffArray[0] = 0;
		}else if (lastAltitude != altitude) {
			diffArray[index] = 1;
		}else {
			diffArray[index] = 0;
		}
		lastAltitude = altitude;
	}
	
	private static void sumDiff() {
		int maxRange = 0;
		int index = 1;
		int start = 0;
		for(int i =0 ; i < diffArray.length ; i++) {
			System.out.println("diffArray[start]="+diffArray[i]);
		}
		
		while (index < diffArray.length) {
			//System.out.println("index="+index);
			int sum = 0;
			start = index+1;
			while(start < diffArray.length && diffArray[start] != 0) {
				//System.out.println("diffArray[start]="+diffArray[start]);
				sum = sum + diffArray[start];
				start++;
			} 
			System.out.println("sum="+sum);
			maxRange=maxRange>sum?maxRange:sum;
			index = start;
			System.out.println("maxRange="+maxRange+", sum="+sum);
		}
	}
	
	
	public static void main(String[] args) {
		int array1[] = { 1 ,3, 3, 2, 4 ,1,2,3};
		FlightTurbulence.maxTurbilence( array1);
		int array2[] = { 1 ,3, 3, 2, 4 ,1,2,3};
		FlightTurbulence.maxTurbilence( array2);
		int array3[] = { 1 ,3, 3, 2, 4 ,1,2,3};
		FlightTurbulence.maxTurbilence( array3);
	}
}
