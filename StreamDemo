public class StreamDemo{
	public static void main(String args[]) { 
	

		
		List<Order> orderBook = new ArrayList<>();

		Order buyGoogle = new Order("GOOG.NS", 300, 900.30, Order.Side.BUY); 
		Order sellGoogle = new Order("GOOG.NS", 600, 890.30, Order.Side.SELL); 
		Order buyApple = new Order("APPL.NS", 400, 552, Order.Side.BUY);
		Order sellApple = new Order("APPL.NS", 200, 550, Order.Side.SELL); 
		Order buyGS = new Order("GS.NS", 300, 130, Order.Side.BUY);

		orderBook.add(buyGoogle);
		orderBook.add(sellGoogle);
		orderBook.add(buyApple);
		orderBook.add(sellApple);
		orderBook.add(buyGS);
		
		Stream<Order> stream = orderBook.stream(); 
		Stream buyOrders = stream.filter(o -> o.side().equals(Order.Side.BUY)); 
		System.out.println("No of Buy Order Placed :" + buyOrders.count());

		Stream<Order> sellOrders = orderBook.stream().filter((Order o) -> o.side() == Order.Side.SELL);
		System.out.println("No of Sell Order Placed : " + sellOrders.count());


		double value = orderBook.stream().mapToDouble(o -> o.price()).sum(); 
		System.out.println("Total value of all orders : " + value);

		long quantity = orderBook.stream().mapToLong((Order o) -> o.quantity()).sum(); 
		System.out.println("Total quantity of all orders : " + quantity);

	       // Convert String to Uppercase and join them using coma
	        List<String> G7 = Arrays.asList("USA", "Japan", "France", "Germany", "Italy","U.K.","Canada");
	        String G7Countries = G7.stream()
	                               .map(x -> x.toUpperCase())
	                               .collect(Collectors.joining(", "));
	        System.out.println(G7Countries);
		
        List<Integer> primes = Arrays.asList(2, 3, 5, 7, 11, 13, 17, 19, 23, 29);
        IntSummaryStatistics stats = primes.stream()
                                           .mapToInt((x) -> x)
                                           .summaryStatistics();
        System.out.println("Highest prime number in List : " + stats.getMax());
        System.out.println("Lowest prime number in List : " + stats.getMin());
        System.out.println("Sum of all prime numbers : " + stats.getSum());
        System.out.println("Average of all prime numbers : " + stats.getAverage());
        
	}
}

class Order { 
	enum Side { BUY, SELL; } 
	private final String symbol; 
	private final int quantity; 
	private double price; 
	private final Side side; 
	
	public Order(String symbol, int quantity, double price, Side side)	{ 
		this.symbol = symbol; 
		this.quantity = quantity; 
		this.price = price; 
		this.side = side; 
	}

	public double price() {
		return price;
	}

	public void price(double price) {
		this.price = price;
	}

	public String symbol() {
		return symbol;
	}

	public int quantity() {
		return quantity;
	}

	public Side side() {
		return side;
	}
}
